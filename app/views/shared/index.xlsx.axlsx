record_set = Array.wrap(record_set)
worksheets = klass.respond_to?(:worksheets) ? klass.worksheets : [ klass.to_s ]

wb = xlsx_package.workbook

record_set.each_with_index do |records, i|
  name = worksheets[i] ? worksheets[i] : worksheets.first 
  wb.add_worksheet( name: name.pluralize ) do |sheet|
  
    defined_styles = { default: 0,
                       currency: sheet.styles.add_style( num_fmt: 8 )
                      } 

    sheet_klass = name.constantize 
    fields, formats = fields_and_formats(sheet_klass, true) 
  
    sheet.add_row [ "Request Type" ] + fields.map { |field| sheet_klass.human_attribute_name( field.to_s.split("__").first.intern ) }
    records.each do |record| 
      data = [ record.class.to_s.underscore.humanize ] + fields.map do |field|
          # for currency fields we need to call the special xlsx view helper
          if currency_fields.include?(field.intern) 
            call_record_field record, field, :xlsx
          # otherwise we want all the view helpers called 
          else 
            call_record_field record,field
          end
      end
      styles = [ defined_styles[:default]  ] + formats.map do |format|
        defined_styles[format]
      end
    
      
      sheet.add_row data, style: styles
    end
  end
end
